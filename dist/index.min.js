!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.aqua=e()}(this,function(){"use strict";var t={TIMEOUT:10,RETRY:!0,RETRY_COUNT:3,CLIENT:!0,BROWSER:!1},e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},n=function(){function t(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,o,n){return o&&t(e.prototype,o),n&&t(e,n),e}}(),i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(t[n]=o[n])}return t};return function(){function r(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};o(this,r),i({},this,t,{version:"0.0.1",debug:!1,setting:e,$methodList:[],$methodCount:0,$plugin:{}}),this.initialize()}return n(r,[{key:"initialize",value:function(){var t=this,o=arguments;["method","error","mockup"].forEach(function(n){var i=t[n];i||(i=function(){return t.placeholder.apply(t,o)}),"object"===(void 0===i?"undefined":e(i))&&(t["$"+n]||(t["$"+n]=i))}),this.scanMethod(),this.$registerMethod()}},{key:"$defaultData",value:function(t,e){var o={method:t,support:!1,message:"The method `"+t+"` is not support!",data:{}};return this.debug&&(o=this.$mockup.apply(this,arguments)),o}},{key:"$registerMethod",value:function(){var t=this;this.$methodList.forEach(function(e){t.$method[e]=t.placeholder(e)})}},{key:"$excute",value:function(t,e){return this.debug?Promise.resolve(this.$defaultData.apply(this,arguments)):-1!==this.$methodList.indexOf(t)?this.$method.apply(this,arguments):void 0}},{key:"scanMethod",value:function(){if("object"===e(this.$method))return!1;this.$methodList=Object.keys(this.$method),this.$methodCount=this.$methodList.length}},{key:"placeholder",value:function(){return this.$defaultData.apply(this,arguments)}}],[{key:"use",value:function(){}}]),r}()});
//# sourceMappingURL=dist/index.js.map